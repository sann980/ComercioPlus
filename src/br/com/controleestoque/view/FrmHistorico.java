/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.controleestoque.view;

import br.com.controleestoque.dao.ItemVendaDao;
import br.com.controleestoque.dao.VendasDao;
import br.com.controleestoque.model.ItemVenda;
import br.com.controleestoque.model.Vendas;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanderson M. Carvalho
 */
public class FrmHistorico extends javax.swing.JFrame {

    /**
     * Creates new form FrmHistorico
     */
    public FrmHistorico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtInicio = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFim = new javax.swing.JFormattedTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaHistorico = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtTotalVenda = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Histórico de Vendas");

        jPanel1.setBackground(new java.awt.Color(126, 217, 87));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Histórico de vendas");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta por data"));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Data Inicial:");

        try {
            txtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtInicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInicioKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Data Final:");

        try {
            txtFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFimKeyPressed(evt);
            }
        });

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tabelaHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data da Venda", "Cliente", "Subtotal", "Desconto", "Total da Venda", "Obs"
            }
        ));
        tabelaHistorico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaHistoricoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaHistorico);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Valor Total de Vendas no Período:");

        txtTotalVenda.setEditable(false);
        txtTotalVenda.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTotalVenda.setForeground(new java.awt.Color(0, 204, 0));
        txtTotalVenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPesquisar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnPesquisar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtInicioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInicioKeyPressed
        // Quando o usuário preciona uma tecla
        
    }//GEN-LAST:event_txtInicioKeyPressed

    private void txtFimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFimKeyPressed
        // Quando precionar a tecla Enter
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            // Pesquisa por nome e preenche o formulário com os dados encontrado
        try {
        //----------------------Recebe as datas---------------------------------
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataInicio = LocalDate.parse(txtInicio.getText(), formato);
            LocalDate dataFim = LocalDate.parse(txtFim.getText(), formato);
        //----------------------------------------------------------------------
        VendasDao dao = new VendasDao();
        
        double totalVenda = 0;
        
            List<Vendas> lista = dao.listarVendasPorPeriodo(dataInicio, dataFim);
            DefaultTableModel dados = (DefaultTableModel) tabelaHistorico.getModel();

            dados.setNumRows(0); //Apaga tudo que tem na tabela
            
            for (Vendas v : lista) {
                
                totalVenda += v.getTotalVendaComDesconto();
                
                if(v.getTotalDesconto() != 0){
                    dados.addRow(new Object[]{
                        v.getId(),
                        v.getDataVenda(),
                        v.getCliente().getNome(),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaSemDesconto()),
                        NumberFormat.getCurrencyInstance().format(v.getTotalDesconto()),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaComDesconto()),
                        v.getObs()
                    });
                }else{
                    dados.addRow(new Object[]{
                        v.getId(),
                        v.getDataVenda(),
                        v.getCliente().getNome(),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaSemDesconto()),
                        "",
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaComDesconto()),
                        v.getObs()
                    });
                }
        }
            
            txtTotalVenda.setText(String.valueOf(NumberFormat.getCurrencyInstance().format(totalVenda)));
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Digite uma data inicial e uma final");
        }
        }
    }//GEN-LAST:event_txtFimKeyPressed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // Pesquisa por nome e preenche o formulário com os dados encontrado
        try {
        //----------------------Recebe as datas---------------------------------
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataInicio = LocalDate.parse(txtInicio.getText(), formato);
            LocalDate dataFim = LocalDate.parse(txtFim.getText(), formato);
        //----------------------------------------------------------------------
        VendasDao dao = new VendasDao();
        
        double totalVenda = 0;
        
            List<Vendas> lista = dao.listarVendasPorPeriodo(dataInicio, dataFim);
            DefaultTableModel dados = (DefaultTableModel) tabelaHistorico.getModel();

            dados.setNumRows(0); //Apaga tudo que tem na tabela
            
            for (Vendas v : lista) {
                
                totalVenda += v.getTotalVendaComDesconto();
                
            if(v.getTotalDesconto() != 0){
                    dados.addRow(new Object[]{
                        v.getId(),
                        v.getDataVenda(),
                        v.getCliente().getNome(),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaSemDesconto()),
                        NumberFormat.getCurrencyInstance().format(v.getTotalDesconto()),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaComDesconto()),
                        v.getObs()
                    });
                }else{
                    dados.addRow(new Object[]{
                        v.getId(),
                        v.getDataVenda(),
                        v.getCliente().getNome(),
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaSemDesconto()),
                        "",
                        NumberFormat.getCurrencyInstance().format(v.getTotalVendaComDesconto()),
                        v.getObs()
                    });
                }
        }
            
            txtTotalVenda.setText(String.valueOf(NumberFormat.getCurrencyInstance().format(totalVenda)));
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Digite uma data inicial e uma final");
        }
        
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tabelaHistoricoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaHistoricoMouseClicked
        try {
        //Quando clicar em uma venda
        FrmDetalheVenda telaDetalheVenda = new FrmDetalheVenda();
        
        telaDetalheVenda.txtCliente.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 2).toString());
        telaDetalheVenda.txtTotalSemDesconto.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 3).toString());
        if(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 4).toString().equals("")){
            telaDetalheVenda.txtVedaDesconto.setText("R$ 0,00");
        }else{
            telaDetalheVenda.txtVedaDesconto.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 4).toString());
        }
        telaDetalheVenda.txtTotalComDesconto.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 5).toString());
        telaDetalheVenda.txtData.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 1).toString());
        telaDetalheVenda.txtObs.setText(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 6).toString());
        
        int idVenda = Integer.parseInt(tabelaHistorico.getValueAt(tabelaHistorico.getSelectedRow(), 0).toString());
        //Dados dos itens comprados
        ItemVendaDao itemDao = new ItemVendaDao();
        
        List<ItemVenda> listaItens = itemDao.listaItemPorVenda(idVenda);
        
        DefaultTableModel dados = (DefaultTableModel) telaDetalheVenda.tabelaItensVendido.getModel();
            
            dados.setNumRows(0); //Apaga tudo que tem na tabela
            
            for (ItemVenda i : listaItens) {
                if(i.getDesconto() != 0.00){
                    dados.addRow(new Object[]{
                    i.getProduto().getDescricao(),
                    i.getQtd(),
                    NumberFormat.getCurrencyInstance().format(i.getProduto().getPrecoVarejo()),
                    NumberFormat.getCurrencyInstance().format(i.getDesconto()),
                    NumberFormat.getCurrencyInstance().format(i.getTotal())
                });
                }
                else{
                    dados.addRow(new Object[]{
                    i.getProduto().getDescricao(),
                    i.getQtd(),
                    NumberFormat.getCurrencyInstance().format(i.getProduto().getPrecoVarejo()),
                    "",
                    NumberFormat.getCurrencyInstance().format(i.getTotal())
                });
                }
                
            }
        
        telaDetalheVenda.setVisible(true);
        
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro:" + erro);
        }
    }//GEN-LAST:event_tabelaHistoricoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaHistorico;
    private javax.swing.JFormattedTextField txtFim;
    private javax.swing.JFormattedTextField txtInicio;
    public javax.swing.JTextField txtTotalVenda;
    // End of variables declaration//GEN-END:variables
}
